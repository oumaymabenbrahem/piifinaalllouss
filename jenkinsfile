pipeline {
    agent none // Set to none since we'll define agents per stage
    
    stages {
        // Node.js stages run in node:18 container
        stage('Install Dependencies') {
            agent {
                docker {
                    image 'node:18'
                    args '-u root'
                }
            }
            stages {
                stage('Install Client Dependencies') {
                    steps {
                        dir('client') {
                            sh 'npm install'
                        }
                    }
                }
                stage('Install Server Dependencies') {
                    steps {
                        dir('server') {
                            sh 'npm install'
                        }
                    }
                }
            }
        }

        stage('Run Tests') {
            agent {
                docker {
                    image 'node:18'
                    args '-u root'
                }
            }
            stages {
                stage('Client Tests') {
                    steps {
                        dir('client') {
                            script {
                                sh 'npm test || echo "Aucun test client configuré"'
                            }
                        }
                    }
                }
                stage('Server Tests') {
                    steps {
                        dir('server') {
                            script {
                                sh 'npm test || echo "Aucun test serveur configuré"'
                            }
                        }
                    }
                }
            }
        }

        stage('Build Client') {
            agent {
                docker {
                    image 'node:18'
                    args '-u root'
                }
            }
            steps {
                dir('client') {
                    sh 'npm run build'
                }
            }
        }

        stage('Build Docker Images') {
            agent {
                docker {
                    image 'docker:latest'
                    args '-v /var/run/docker.sock:/var/run/docker.sock -v $WORKSPACE:$WORKSPACE -w $WORKSPACE'
                }
            }
            steps {
                script {
                    // Use Docker Compose V2 syntax
                    sh 'docker compose build'
                    
                    // Alternative if you need V1 syntax:
                    // sh 'apk add docker-compose'
                    // sh 'docker-compose build'
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline terminée - Nettoyage'
            script {
                // Clean up any dangling Docker resources
                sh 'docker system prune -f || true'
            }
        }
        success {
            echo '✅ SUCCÈS : Le déploiement a réussi!'
        }
        failure {
            echo '❌ ÉCHEC : Vérifiez les logs pour diagnostiquer le problème'
        }
    }
}
