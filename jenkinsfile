pipeline {
    agent {
        docker {
            image 'node:18'
            args '-u root --network=host'
        }
    }
    environment {
        
        SONAR_SCANNER_HOME = tool 'scanner' 
        SONAR_PROJECT_KEY = 'piapp'
        SONAR_PROJECT_NAME = 'Mon Projet' 
        SONAR_AUTH_TOKEN = credentials('sonar')  
    }
    stages {
        /* Installation des dépendances */
        stage('Install Dependencies') {
            parallel {
                stage('Client') {
                    steps {
                        dir('client') {
                            sh 'npm ci'
                        }
                    }
                }
                stage('Server') {
                    steps {
                        dir('server') {
                            sh 'npm ci'
                        }
                    }
                }
            }
        }

        /* Tests */
        stage('Run Tests') {
            parallel {
                stage('Client Tests') {
                    steps {
                        dir('client') {
                            script {
                                sh 'npm test || echo "Aucun test client configuré"'
                            }
                        }
                    }
                }
                stage('Server Tests') {
                    steps {
                        dir('server') {
                            script {
                                sh 'npm test || echo "Aucun test serveur configuré"'
                            }
                        }
                    }
                }
            }
        }

        stages {
        stage('Analyse SonarQube') {
            steps {
                // 4. Nom doit matcher "Nom" dans Configure System
                withSonarQubeEnv('scanner') {  
                    sh """
                        ${SONAR_SCANNER_HOME}/bin/sonar-scanner \
                        -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                        -Dsonar.projectName="${SONAR_PROJECT_NAME}" \
                        -Dsonar.host.url=http://192.168.33.10:9000 \
                        -Dsonar.login=${SONAR_AUTH_TOKEN} \
                        -Dsonar.sources=src
                    """
                }
            }
        }

        /* Build Client */
        stage('Build Client') {
            steps {
                dir('client') {
                    sh 'npm run build'
                    archiveArtifacts artifacts: 'dist/**/*', fingerprint: true
                }
            }
        }
    }
    post {
        always {
            echo 'Nettoyage terminé'
        }
        success {
            echo '✅ Pipeline réussie'
        }
        failure {
            echo '❌ Pipeline échouée'
        }
    }
}
